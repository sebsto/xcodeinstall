#!/bin/bash
set -e

VERSION="$1"
if [ -z "$VERSION" ]; then
    echo "Usage: $0 <version>"
    echo "Example: $0 0.15.0"
    exit 1
fi

TAG="v$VERSION"
echo "🚀 Releasing version $VERSION"

# 1. Update version in source
echo "📝 Updating version in source code"
cat > Sources/xcodeinstall/Version.swift << EOF
// Generated by: scripts/simple-deploy/release.sh
struct Version {
    let current = "$VERSION"
}
EOF

# 2. Build fat binary
echo "🏗️ Building fat binary"
swift build --configuration release --arch arm64 --arch x86_64

# 3. Create GitHub release with binary
echo "🏷️ Creating GitHub release"
git add Sources/xcodeinstall/Version.swift
git commit -m "Bump version to $VERSION"
git tag "$TAG"
git push --no-verify origin main "$TAG"

gh release create "$TAG" --generate-notes
gh release upload "$TAG" .build/apple/Products/Release/xcodeinstall

# 4. Generate Homebrew formula
echo "🍺 Generating Homebrew formula"
URL="https://github.com/sebsto/xcodeinstall/archive/refs/tags/$TAG.tar.gz"
SHA256=$(curl -sL "$URL" | shasum -a 256 | awk '{print $1}')

cat > xcodeinstall.rb << EOF
class Xcodeinstall < Formula
  desc "This is a command-line tool to download and install Apple's Xcode"
  homepage "https://github.com/sebsto/xcodeinstall"
  url "$URL"
  sha256 "$SHA256"
  license "Apache-2.0"

  bottle do
    root_url "https://github.com/sebsto/xcodeinstall/releases/download/$TAG"
    sha256 cellar: :any_skip_relocation, arm64_ventura: "$(shasum -a 256 .build/apple/Products/Release/xcodeinstall | awk '{print $1}')"
    sha256 cellar: :any_skip_relocation, arm64_sonoma: "$(shasum -a 256 .build/apple/Products/Release/xcodeinstall | awk '{print $1}')"
    sha256 cellar: :any_skip_relocation, arm64_sequoia: "$(shasum -a 256 .build/apple/Products/Release/xcodeinstall | awk '{print $1}')"
    sha256 cellar: :any_skip_relocation, ventura: "$(shasum -a 256 .build/apple/Products/Release/xcodeinstall | awk '{print $1}')"
    sha256 cellar: :any_skip_relocation, sonoma: "$(shasum -a 256 .build/apple/Products/Release/xcodeinstall | awk '{print $1}')"
    sha256 cellar: :any_skip_relocation, sequoia: "$(shasum -a 256 .build/apple/Products/Release/xcodeinstall | awk '{print $1}')"
  end

  def install
    system "swift", "build", "--configuration", "release", "--arch", "arm64", "--arch", "x86_64", "--disable-sandbox"
    bin.install ".build/apple/Products/Release/xcodeinstall"
  end

  test do
    assert_equal version.to_s, shell_output("#{bin}/xcodeinstall --version").chomp
  end
end
EOF

# 5. Update homebrew tap
echo "📦 Updating Homebrew tap"
if [ -d "../homebrew-macos" ]; then
    cp xcodeinstall.rb ../homebrew-macos/
    cd ../homebrew-macos
    git add xcodeinstall.rb
    git commit -m "Update xcodeinstall to $VERSION"
    git push --no-verify
    cd -
else
    echo "⚠️  ../homebrew-macos directory not found. Please copy xcodeinstall.rb manually."
fi

echo "✅ Release $VERSION completed!"